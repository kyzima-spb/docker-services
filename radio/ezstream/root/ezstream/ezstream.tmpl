<?xml version="1.0" encoding="UTF-8"?>

<!--
  EXAMPLE: A valid configuration that contains every configuration option

  NB: /ezstream/metadata/program is commented out
  so that this configuration can work without scripting.
-->

<!-- Ezstream configuration root element -->
<ezstream>

  <!-- Server configuration -->
  <servers>
    <server>
      <!-- Identifying name (default: "default") -->
      <name>${EZ_SERVER_NAME}</name>

      <!--
        Transport protocol:
        HTTP (default), HTTPS (implies <tls>required</tls>), ICY, RoarAudio
      -->
      <protocol>${EZ_SERVER_PROTOCOL}</protocol>
      
      <!-- Server address -->
      <hostname>${EZ_SERVER_HOSTNAME}</hostname>
      
      <!-- Server port (default: 8000) -->
      <port>${EZ_SERVER_PORT}</port>

      <!-- Login user (default: "source") -->
      <user>${EZ_SERVER_USER}</user>
      
      <!-- Login password (check file permissions, or everyone can see this) -->
      <password>${EZ_SERVER_PASSWORD}</password>

      <!--
        Configure TLS requirement: none, may, required (default: "may")

        For compatibility reasons, the default configuration and this example
        is "may". THIS IS INSECURE. It allows a MitM to intercept the
        password and tamper with the stream. It is recommended to set this to
        "required" when configuring TLS to secure streaming over untrusted
        networks.
      -->
      <tls>${EZ_SERVER_TLS}</tls>

      <!--
        Configure allowed cipher suites for TLS other than the libshout default.
        See openssl(1)/ciphers(1) for details.
      -->
      <tls_cipher_suite>${EZ_SERVER_TLS_CIPHER_SUITE}</tls_cipher_suite>

      <!--
        Directory to use for server certificate verification in "hash format".
        See openssl(1)/verify(1) for details.

        One of the <ca_dir /> or <ca_file /> settings must be enabled for
        certificate verification to succeed.
      -->
      <ca_dir>${EZ_SERVER_CA_DIR}</ca_dir>

      <!--
        CA bundle for both server certificate verification and building the
        client certificate chain.

        One of the <ca_dir /> or <ca_file /> settings must be enabled for
        certificate verification to succeed.
      -->
      <ca_file>${EZ_SERVER_CA_FILE}</ca_file>

      <!--
        X.503 client certificate, in PEM format, containing both certificate
        (with public key) and private key in the same file, for
        authentication.
        -->
      <client_cert>${EZ_SERVER_CLIENT_CERT}</client_cert>

      <!-- Number of reconnection attempts, before giving up (default: 0) -->
      <reconnect_attempts>${EZ_SERVER_RECONNECT_ATTEMPTS}</reconnect_attempts>
    </server>
  </servers>

  <!-- Stream configuration -->
  <streams>
    <stream>
      <!--
        Identifying name (default: "default")
        NB: Only the "default" stream is supported at this point.
      -->
      <name>${EZ_STREAM_NAME_ID}</name>

      <!-- Mount point on server -->
      <mountpoint>${EZ_STREAM_MOUNTPOINT}</mountpoint>

      <!-- Name of the intake entry to use (default: "default") -->
      <intake>${EZ_STREAM_INTAKE}</intake>

      <!-- Name of the server entry to use (default: "default") -->
      <server>${EZ_STREAM_SERVER}</server>

      <!-- Setting to allow stream to be listed in public YP directory (default: no) -->
      <public>${EZ_STREAM_PUBLIC}</public>

      <!-- Stream format: Ogg, MP3, WebM, Matroska -->
      <format>${EZ_STREAM_FORMAT}</format>

      <!-- Encoder name (defined below) to use for (re)encoding -->
      <encoder>${EZ_STREAM_ENCODER}</encoder>

      <!-- Various other informational settings -->
      <stream_name>${EZ_STREAM_NAME}</stream_name>
      <stream_url>${EZ_STREAM_URL}</stream_url>
      <stream_genre>${EZ_STREAM_GENRE}</stream_genre>
      <stream_description>${EZ_STREAM_DESCRIPTION}</stream_description>
      <stream_quality>${EZ_STREAM_QUALITY}</stream_quality>
      <stream_bitrate>${EZ_STREAM_BITRATE}</stream_bitrate>
      <stream_samplerate>${EZ_STREAM_SAMPLERATE}</stream_samplerate>
      <stream_channels>${EZ_STREAM_CHANNELS}</stream_channels>
    </stream>
  </streams>

  <!-- Intake configuration -->
  <intakes>
    <intake>
      <!-- Identifying name (default: "default") -->
      <name>${EZ_INTAKE_NAME_ID}</name>

      <!-- Media type: autodetect, file, playlist, program, stdin (default: autodetect) -->
      <type>${EZ_INTAKE_TYPE}</type>

      <!-- Input file, program name, or "stdin" keyword (deprecated) -->
      <filename>${EZ_INTAKE_FILENAME}</filename>

      <!-- Setting to shuffle playlists -->
      <shuffle>${EZ_INTAKE_SHUFFLE}</shuffle>

      <!-- Setting whether to stream intake indefinitely or only once -->
      <stream_once>${EZ_INTAKE_STREAM_ONCE}</stream_once>
    </intake>
  </intakes>

  <!-- Metadata configuration -->
  <metadata>
    <!-- Program to query for metadata instead of from media files -->
    <program>${EZ_METADATA_PROGRAM}</program>

    <!-- Metadata format -->
    <format_str>${EZ_METADATA_FORMAT_STR}</format_str>

    <!-- Interval for additional metadata refreshes (default: -1 (none)) -->
    <refresh_interval>${EZ_METADATA_REFRESH_INTERVAL}</refresh_interval>

    <!-- Setting to clean up extraneous whitespace (default: no) -->
    <normalize_strings>${EZ_METADATA_NORMALIZE_STRINGS}</normalize_strings>

    <!-- Setting to suppress all metadata udpates (default: no) -->
    <no_updates>${EZ_METADATA_NO_UPDATES}</no_updates>
  </metadata>

  <!-- Decoder configurations -->
  <decoders>
    <decoder>
      <!-- Decoder name -->
      <name>OggDec</name>
      <!-- Program and options -->
      <program>oggdec -R -b 16 -e 1 -s 1 -o - @T@</program>
      <!-- File extensions to use this decoder for -->
      <file_ext>.ogg</file_ext>
      <file_ext>.oga</file_ext>
    </decoder>

    <decoder>
      <name>MadPlay</name>
      <program>madplay -b 16 -R 44100 -S -o raw:- @T@</program>
      <file_ext>.mp3</file_ext>
    </decoder>

    <decoder>
      <name>Flac</name>
      <program>flac -s -d --force-raw-format --sign=signed --endian=little -o - @T@</program>
      <file_ext>.flac</file_ext>
    </decoder>

    <decoder>
      <name>AAC</name>
      <program>faad -d -f 2 -w @T@</program>
      <file_ext>.m4a</file_ext>
    </decoder>
  </decoders>

  <!-- Encoder configurations -->
  <encoders>
    <encoder>
      <!-- Encoder name -->
      <name>OggEnc-Q1.5</name>
      <!-- Output stream format -->
      <format>Ogg</format>
      <!-- Program and options -->
      <program>oggenc -r -B 16 -C 2 -R 44100 --raw-endianness 0 -q 1.5 -t @M@ -</program>
    </encoder>

    <encoder>
      <name>Opus-VBR96</name>
      <format>Ogg</format>
      <program>opusenc --vbr --bitrate 96 --title @t@ --artist @a@ --raw --raw-rate 44100 - -</program>
    </encoder>

    <encoder>
      <name>Lame-CBR128</name>
      <format>MP3</format>
      <program>lame --preset cbr 128 -r -s 44.1 --bitwidth 16 - -</program>
    </encoder>
  </encoders>

</ezstream>